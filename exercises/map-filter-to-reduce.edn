{:title "almighty reduce"
 :category :learning-functions
 :instructions ["Refactor the following code to use a single reduce instead of map + filter"
                (defn long-lengths
                  [strings]
                  (map count (filter (fn [string] (< 5 (count string))) strings)))]
 :tests [(is (= [8 6 7]
                (long-lengths ["foo" "aoeusnth" "q" "aoeus"
                               "abcdef" "1234567"])))]
 :solution (defn long-lengths-reduce
             [strings]
             (reduce (fn [counts string]
                       (let [len (count string)]
                         (if (< 5 len)
                           (conj counts len)
                           counts)))
                     [] strings))
 :uses #{conj count < map filter}
 :teaches #{reduce}}
