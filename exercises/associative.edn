{:title "associative collections"
 :instructions ["Write a function that takes a vector or a map, a key/index, and a new value."
                "Return a vector of the value that was originally at that key/index and the original map/vector with the new value at the given key/index"]
 :tests [(is (= [1 [2 3 4]]
                (get-and-set 0 2 [1 3 4])))
         (is (= ["foo" {:a "baz" :b "quux"}]
                (get-and-set :a "baz" {:a "foo" :b "quux"})))]
 :solution (defn get-and-set
             [k v col]
             [(get col k) (assoc col k v)])
 :teaches #{get assoc}
 :uses #{:vectors :maps}
 :category :learning-functions
 :difficulty :low}
