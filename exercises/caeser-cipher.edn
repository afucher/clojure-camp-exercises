{:title "Caeser Cipher"
 :type #{:word-problem}
 :instructions ["Write a function that takes a string and a \"secret key\" which is a number that indicates how many characters to rotate the letters by."
                "You can assume that only upper-case letters will be used, leave spaces unchanged"
                (defn caeser-cipher [key message])]
 :tests [(is (= "KHOOR ZRUOG"
                (caeser-cipher 3 "HELLO WORLD")))
         (is (= "HELLO WORLD"
                (caeser-cipher -3 "KHOOR ZRUOG")))
         (is (= "HELLO WORLD"
                (caeser-cipher 13 (caeser-cipher 13 "HELLO WORLD"))))]
 :solution [(def char-base (int \A))
             (defn caeser-cipher
               [key message]
               (->> (seq message)
                   (map (fn [chr]
                          (if (= chr \space)
                            \space
                            (-> (int chr)
                                (- char-base)
                                (+ key)
                                (mod 26)
                                (+ char-base)
                                char))))
                   (apply str)))]
 :uses #{defn int char + - mod map ->> apply str seq}}
