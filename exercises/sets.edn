{:title "using sets"
 :instructions ["Given two sets of user interests, return sets indicating: (1) their common interests, (2) each of their unique interests, and (3) all of their interests."]
 :tests [(is (= {:shared #{"programming" "boardgames"}
                 :all #{"programming" "boardgames" "lifting" "reading" "movies" "sculpting"}
                 :unique-a #{"lifting" "reading"}
                 :unique-b #{"movies" "sculpting"}}
                (interests-info
                  #{"programming" "boardgames" "lifting" "reading"}
                  #{"programming" "movies" "boardgames" "sculpting"})))]
 :solution [(require '[clojure.set :as set])
            (defn interests-info
              [a b]
              {:shared (set/intersection a b)
               :all (set/union a b)
               :unique-a (set/difference a b)
               :unique-b (set/difference b a)})]
 :teaches #{:sets clojure.set/intersection clojure.set/difference clojure.set/union}
 :uses #{:maps :strings :keywords}
 :category :learning-functions
 :difficulty :low}
