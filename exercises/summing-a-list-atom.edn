{:title "summing a list (atom)"
 :difficulty :low
 :category :learning-functions
 :instructions ["Write a function to sum a list of numbers, using an `atom` and `doseq`."]
 :related #{"summing-a-list-reduce"
            "summing-a-list-apply"
            "summing-a-list-naive-recursion"
            "summing-a-list-safe-recursion"}
 :tests [(is (= 10 (sum [1 2 3 4])))
         (is (= 0 (sum [])))
         (is (= 0 (sum [1 -1 1 -1 1 -1 0])))]
 :solution (defn sum [values]
             (let [total (atom 0)]
               (doseq [v values]
                 (swap! total + v))
               @total))
 :teaches #{atom doseq "@" deref swap! :working-with-atoms}
 :uses #{let :math-operations +}}
