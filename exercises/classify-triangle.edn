{:title "classify triangle"
 :category :starter
 :difficulty :low
 :related #{"triangle"}
 :instructions ["Write a function `classify-triangle`, which, given 3 numbers, returns whether a triangle is equilateral (3 equal sides), isosceles (2 equal sides), scalene, or, not a triangle."]
 :tests [(is (= :equilateral (classify-triangle 1 1 1)))
         (is (= :invalid (classify-triangle 0 0 0)))
         (is (= :invalid (classify-triangle 1 1 2)))
         (is (= :isosceles (classify-triangle 4 4 5)))
         (is (= :scalene (classify-triangle 3 4 5)))]
 :solution [(defn triangle? [a b c]
              (and
                (< a (+ b c))
                (< b (+ a c))
                (< c (+ a b))))

            (defn classify-triangle [a b c]
              (cond
                (not (triangle? a b c))
                :invalid
                (= a b c)
                :equilateral
                (or (= a b) (= b c) (= c a))
                :isosceles
                :else
                :scalene))]
 :uses #{:math-operations :math-comparisons + < cond not = or :keywords}
 :source "https://exercism.io/tracks/clojure/exercises/triangle"}
